<ui:composition 
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	template="/layout/layout.xhtml">


	<ui:define name="insert-content">
		
		<ui:include src="/components/breadCrumb.xhtml">
			<ui:param name="step" value="3" />
		</ui:include>
		
		<h:panelGrid columns="3" style="padding-top:15px;">
			
			<h:outputLabel for="anonymizationMethodSelect">Method</h:outputLabel>
			<h:form>        
				<p:selectOneMenu id="anonymizationMethodSelect" value="#{anonymiseBacking.anonymisationMethod}" converter="methodConverter" var="a">
					<p:ajax event="change" update=":anonymizeTabView,:buttons"
					    listener="#{anonymiseBacking.onAnonymisatationTypeChanged()}" oncomplete=""/>
					<f:selectItems value="#{anonymiseBacking.supportedAnonymisationMethods}" var="anonMethod" 
						itemLabel="#{anonMethod.type}" itemValue="#{anonMethod}" />
					<p:column>
	               		<h:outputText value="#{a.type}" />
	           		</p:column>
	       		</p:selectOneMenu>
			</h:form>

			<p:outputPanel id="buttons">
				<p:commandButton id="saveColumnSettingsButton"
					actionListener="#{anonymiseBacking.onSaveColumnSettings()}"
					value="Save Changes" update="anonymizeTabView,:menuForm:menuBar"
					process="@this" icon="ui-icon-disk" />

				<p:commandButton value="Configure Encryption" 
					oncomplete="PF('configureEncryptionPopup').show();" rendered="#{anonymiseBacking.anonymisationMethod.type == 'ENCRYPT'}" update=":configureEncryptionPopupId"/>	
			
				<p:commandButton value="Configure Mappings" action="#{configureMappingsPopupBacking.onConfigureMappingsClicked()}"
					oncomplete="PF('configureMappingsPopup').show();" rendered="#{anonymiseBacking.anonymisationMethod.type == 'MAP'}" update=":configureMappingsPopupId"/>

				<p:commandButton value="No Row Filter Defined" title="Your anonymisation will change to all rows in the table. Click here to filter the applicable rows."
					action="#{anonymiseBacking.onRowFilterClicked}" rendered="#{anonymiseBacking.rowFilterSupport() and null == configContext.anonymisedColumnInfo.guiFieldApplicability}" />	
		
				<p:commandButton value="Show Row Filter" title="Your anonymisation will not apply to all rows. Click here to see the applicable rows."
					action="#{anonymiseBacking.onRowFilterClicked}" rendered="#{anonymiseBacking.rowFilterSupport() and null != configContext.anonymisedColumnInfo.guiFieldApplicability}" />	
		
			</p:outputPanel>


		</h:panelGrid>
		
		<p:tabView id="anonymizeTabView" >
		
			<p:tab id="anonymizeTab" title="Anonymize Column: #{anonymiseBacking.editedColumn.name}" rendered="#{null ne anonymiseBacking.editedColumn}"> 
			
				<style>
					.fifty-percent {
   						width: 50%;
					}
				</style>
			
				<h:panelGrid columns="2" style="width:100%;" columnClasses="fifty-percent">
	        
					<p:dataTable  value="#{anonymiseBacking.editedColumn.exampleValues}" var="exampleValue"
						scrollable="true" scrollHeight="300">
						<p:column headerText="Original Values">
							<h:outputText value="#{exampleValue}"/>
						</p:column>
					</p:dataTable>
						        
					<p:dataTable id="anonymizedValues" value="#{anonymiseBacking.editedColumn.exampleValues}" var="exampleValue"
						scrollable="true" scrollHeight="300">
						<p:column headerText="Anonymized Values">
							<h:outputText value="#{anonymiseBacking.anonymiseValue(exampleValue)}"/>
						</p:column>
					</p:dataTable>
						        
				</h:panelGrid>
															
			</p:tab>
		
			<p:tab title="Related to #{anonymiseBacking.editedColumn.name}">
				<!-- unselect related -->
				<h:panelGroup rendered="#{anonymiseBacking.anonymisationMethod.type eq 'NONE' and not empty anonymiseBacking.selectedRelatedTableColumns}">
					
					<h:form>
						<style>
							.ui-datatable .ui-state-highlight {
   								background: red !important;
							}
						</style>
							    	
						<p:dataTable id="relatedTableColumnsToRemove"  
							value="#{anonymiseBacking.selectedRelatedTableColumns}" var="relatedTableColumnInfo"
							selection="#{anonymiseBacking.selectedRelatedTableColumnsToRemove}" rowKey="#{relatedTableColumnInfo.key}"
							scrollable="true" scrollHeight="300"
							style="padding-top:20px;">
							        	
							<p:ajax event="rowSelectCheckbox"/>
							<p:ajax event="rowUnselectCheckbox"/>
							<p:ajax event="toggleSelect"/>
							<p:ajax event="rowSelect"/>
							<p:ajax event="rowUnselect"/>
								        	
							<f:facet name="header">Also remove the following related anonymisations</f:facet>
								        	
					      	<p:column selectionMode="multiple" style="width:20px;text-align:center"/>
						    <p:column headerText="Column" >
						    	<h:outputText value="#{relatedTableColumnInfo.columnName}"/>
						    </p:column>
						    <p:column headerText="Related table" >
						    	<h:outputText value="#{relatedTableColumnInfo.tableName}"/>
						    </p:column>
						    <p:column headerText="Relation" >
						    	<h:outputText value="#{relatedTableColumnInfo.relation}"/>
						    </p:column>
						</p:dataTable>
										
					</h:form>
							    	
				</h:panelGroup>

				<!-- select related -->
				<h:panelGroup rendered="#{anonymiseBacking.anonymisationMethod.type ne 'NONE'}">				
				   	<h:form>
				   	
				        <p:dataTable id="relatedTableColumns"  
				        	value="#{anonymiseBacking.relatedTableColumns}" var="relatedTableColumnInfo"
				        	selection="#{anonymiseBacking.selectedRelatedTableColumns}" rowKey="#{relatedTableColumnInfo.key}"
				        	scrollable="true" scrollHeight="600"
				        	style="padding-top:20px;"
							filteredValue="#{anonymiseBacking.filteredRelatedTableColumns}">
							
							<p:ajax event="rowSelectCheckbox"/>
							<p:ajax event="rowUnselectCheckbox"/>
							<p:ajax event="toggleSelect"/>
							<p:ajax event="rowSelect"/>
							<p:ajax event="rowUnselect"/>
								        	
							<f:facet name="header">Also anonymise the following</f:facet>
								        	
							<p:column selectionMode="multiple" style="width:20px;text-align:center"/>
							<p:column headerText="Column" filterBy="#{relatedTableColumnInfo.columnName}" filterMatchMode="contains" sortBy="#{relatedTableColumnInfo.columnName}">
								<h:outputText value="#{relatedTableColumnInfo.columnName}"/>
							</p:column>
							<p:column headerText="Related table" filterBy="#{relatedTableColumnInfo.tableName}" filterMatchMode="contains" sortBy="#{relatedTableColumnInfo.tableName}">
								<h:outputText value="#{relatedTableColumnInfo.tableName}"/>
							</p:column>
							<p:column headerText="Relation" sortBy="#{relatedTableColumnInfo.relation}">
								<h:outputText value="#{relatedTableColumnInfo.relation}"/>
							</p:column>
						</p:dataTable>
						
					</h:form>	
				</h:panelGroup>			
								
			</p:tab>
		
		</p:tabView>
		
		<h:outputText value="DEBUG INFO: #{anonymiseBacking.anonymisationMethod}" style="color:white;"/>
		
		
	</ui:define>
	
	<ui:define name="includedDialogs">
		<style>
			.colTypeStyle{
				width: 150px;
			}
			.colConditionStyle{
				width: 150px;
			}
			.colValueStyle{
				width: 150px;
			}
			.col4Style{
				width: 100px;
			}
		</style>

		
		<p:dialog id="configureEncryptionPopupId" header="Configure Encryption" widgetVar="configureEncryptionPopup" modal="true" width="400">
		<h:form id="configureEncryptionPopupForm" rendered="#{anonymiseBacking.anonymisationMethod.type == 'ENCRYPT'}">
			<h:panelGrid id="passwordGrid" columns="2">
				
				<h:outputLabel for="pwd1" value="Password: *" />
        		<p:password id="pwd1" value="#{configureEncryptionPopupBacking.password}" match="pwd2" label="Password" size="30"/>
        		
        		<h:outputLabel for="pwd2" value="Reytpe: *" />
        		<p:password id="pwd2" value="#{configureEncryptionPopupBacking.password}" label="Retype" size="30"/>
        		
        		<p:commandButton value="Generate Password" process="@this" action="#{configureEncryptionPopupBacking.generateRandomPassword()}" update=":configureEncryptionPopupForm"/>
				<h:outputText value="#{configureEncryptionPopupBacking.generatedPassword}" />
				
			</h:panelGrid>
			
			<p:spacer height="10px"/>
			
			<h:panelGrid columns="2" cellpadding="5">
				<p:commandButton value="Submit" actionListener="#{configureEncryptionPopupBacking.onSubmitClicked()}" oncomplete="PF('configureEncryptionPopup').hide();" />
				<p:commandButton value="Cancel" process="@none" oncomplete="PF('configureEncryptionPopup').hide();"/>
			</h:panelGrid>
			
		</h:form>
		</p:dialog>
	
	
		<p:dialog id="configureMappingsPopupId" header="Configure Mappings" widgetVar="configureMappingsPopup" modal="true" width="700" onHide="#{configureMappingsPopupBacking.onClose()}">
			<p:outputLabel>
			    You can configure the mapping details in here. Please note, that you always need
			    to define a default unconditional mapping, and in addition, you can specify a list of optional conditional mappings.
			    The conditions will be than applied top down to arrive at a mapped value for your anonymised column.
		    </p:outputLabel>
		    <h:form id="configureMappingsPopupForm" rendered="#{anonymiseBacking.anonymisationMethod.type == 'MAP'}">
			    <p:outputLabel value="Mapping default:"/>
			    <p:inputText value="#{configureMappingsPopupBacking.anonymisationMethodMapping.mappingDefault.defaultValue}"/>
			    
			    <p:outputPanel style="width:550px">
				    <p:dataTable id="configureMappingsDataTable" value="#{configureMappingsPopupBacking.mappingRuleList}" var="mappingRule" >
				    	<p:column headerText="Type" styleClass="colTypeStyle">
				    		<p:outputLabel value="#{mappingRule.getClass().getSimpleName()}"/>
				    	</p:column>
				    	<p:column headerText="Condition" styleClass="colConditionStyle">
				    		<p:outputLabel value="#{mappingRule.getBoundary()}"/>
				    	</p:column>
				    	<p:column headerText="Value" styleClass="colValueStyle">
				    		<p:outputLabel value="#{mappingRule.getMappedValue()}"/>
				    	</p:column>
						<p:column styleClass="col4Style">					
				        	<p:commandButton id="deleteButton" update=":configureMappingsPopupForm" icon="ui-icon-close"
				        		title="Delete" actionListener="#{configureMappingsPopupBacking.onDelete(mappingRule)}"/>
				        	<p:commandButton id="upButton" update="configureMappingsDataTable" icon="ui-icon-arrow-1-n" 
				        		title="Move one up" actionListener="#{configureMappingsPopupBacking.onUp(mappingRule)}"/>
				        	<p:commandButton id="downButton" update="configureMappingsDataTable" icon="ui-icon-arrow-1-s" 
				        		title="Move one down" actionListener="#{configureMappingsPopupBacking.onDown(mappingRule)}"/>
				        </p:column>				    	
				    </p:dataTable>
				</p:outputPanel>
					       		
	       		<p:panelGrid id="addPanel" columns="4" columnClasses="colTypeStyle,colConditionStyle,colValueStyle,col4Style">
				    <p:selectOneMenu id="conditionSelect"  value="#{configureMappingsPopupBacking.selectedMappingRuleType}" >
						<p:ajax event="change" update="addPanel"
						    listener="#{configureMappingsPopupBacking.onConditionSelectChanged()}"/>
						<f:selectItems value="#{configureMappingsPopupBacking.mappingRuleTypeList}" var="mappingRuleType" 
							itemLabel="#{mappingRuleType}" itemValue="#{mappingRuleType}" />
						<p:column>
		               		<h:outputText value="#{mappingRuleType}" />
		           		</p:column>
		       		</p:selectOneMenu>

					<p:inputText value="#{configureMappingsPopupBacking.condition}"/>
					<p:inputText value="#{configureMappingsPopupBacking.mappedValue}"/>

			    	<p:commandButton value="Add" action="#{configureMappingsPopupBacking.onAddClicked()}"  update=":configureMappingsPopupForm"/>
			    	
			    </p:panelGrid>

			    <p:commandButton value="Close" action="#{configureMappingsPopupBacking.onClose()}" oncomplete="PF('configureMappingsPopup').hide();" update=":anonymizeTabView"/>
			    
			    <p:spacer height="50px"/>
			</h:form>
		</p:dialog> 
	
	</ui:define>
</ui:composition>